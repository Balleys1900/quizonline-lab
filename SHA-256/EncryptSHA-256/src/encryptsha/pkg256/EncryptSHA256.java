/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encryptsha.pkg256;

/**
 *
 * @author DELL INC
 */
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;

public class EncryptSHA256 {

// Java program to calculate SHA hash value 
    private static byte[] getSHA(String input) throws NoSuchAlgorithmException {
        // Static getInstance method is called with hashing SHA 
        MessageDigest md = MessageDigest.getInstance("SHA-256");

        // digest() method called 
        // to calculate message digest of an input 
        // and return array of byte 
        return md.digest(input.getBytes(StandardCharsets.UTF_8));
    }

    private static String toHexString(byte[] hash) {
        // Convert byte array into signum representation 
        BigInteger number = new BigInteger(1, hash);

        // Convert message digest into hex value 
        StringBuilder hexString = new StringBuilder(number.toString(16));

        // Pad with leading zeros 
        while (hexString.length() < 32) {
            hexString.insert(0, '0');
        }

        return hexString.toString();
    }

    public static String encryptedPasswordSHA256(String password) throws NoSuchAlgorithmException {
        return toHexString(getSHA(password));
    }

    // Driver code 
    public static void main(String args[]) {
        String a = null;
        if (a != null) {
            if (a.equals("2")) {
                System.out.println("a");
            } else {
                System.out.println("b");
            }
        }
        a = "2";
        if (a.equals("2")) {
                System.out.println("a");
            } else {
                System.out.println("b");
            }
//        try {
//            System.out.println("HashCode Generated by SHA-256 for:");
//
//            String s1 = "abc";
//            System.out.println("\n" + s1 + " : " + encryptedPasswordSHA256(s1));
//
//            String s2 = "xyz";
//            System.out.println("\n" + s2 + " : " + encryptedPasswordSHA256(s2));
//        } // For specifying wrong message digest algorithms 
//        catch (NoSuchAlgorithmException e) {
//            System.out.println("Exception thrown for incorrect algorithm: " + e);
//        }
//        for (int i = 0; i < 10; i++) {
//            for (int j = 0; j < 10; j++) {
//                if(j<3){
//                    System.out.println(j);
//                }else{
//                    break;
//                }
//            }
//            System.out.println(i);
//        }
//        System.out.println("5");
    }
}
